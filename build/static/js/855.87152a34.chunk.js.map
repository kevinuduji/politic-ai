{"version":3,"file":"static/js/855.87152a34.chunk.js","mappings":"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","sources":["../node_modules/@cerebras/cerebras_cloud_sdk/src/resources/models.ts","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/OverloadYield.js","../node_modules/@cerebras/cerebras_cloud_sdk/src/version.ts","../node_modules/@cerebras/cerebras_cloud_sdk/src/_shims/auto/runtime.ts","../node_modules/@cerebras/cerebras_cloud_sdk/src/_shims/registry.ts","../node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js","../node_modules/@cerebras/cerebras_cloud_sdk/src/resources/index.ts","../node_modules/@cerebras/cerebras_cloud_sdk/src/error.ts","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/@cerebras/cerebras_cloud_sdk/src/resources/chat/chat.ts","../node_modules/@cerebras/cerebras_cloud_sdk/src/resources/chat/index.ts","../node_modules/@cerebras/cerebras_cloud_sdk/src/_shims/MultipartBody.ts","../node_modules/@cerebras/cerebras_cloud_sdk/src/index.ts","../node_modules/@cerebras/cerebras_cloud_sdk/src/resources/chat/completions.ts","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@cerebras/cerebras_cloud_sdk/src/resources/completions.ts","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@cerebras/cerebras_cloud_sdk/_shims/index.js","../node_modules/@cerebras/cerebras_cloud_sdk/src/_shims/web-runtime.ts","../node_modules/@cerebras/cerebras_cloud_sdk/src/resource.ts","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/asyncIterator.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@cerebras/cerebras_cloud_sdk/src/uploads.ts","../node_modules/@cerebras/cerebras_cloud_sdk/src/core.ts","../node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js","../node_modules/@cerebras/cerebras_cloud_sdk/src/streaming.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport { isRequestOptions } from '../core';\nimport * as Core from '../core';\n\nexport class Models extends APIResource {\n  /**\n   * Get Model\n   */\n  retrieve(\n    modelId: string,\n    params?: ModelRetrieveParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ModelRetrieveResponse>;\n  retrieve(modelId: string, options?: Core.RequestOptions): Core.APIPromise<ModelRetrieveResponse>;\n  retrieve(\n    modelId: string,\n    params: ModelRetrieveParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ModelRetrieveResponse> {\n    if (isRequestOptions(params)) {\n      return this.retrieve(modelId, {}, params);\n    }\n    const { 'CF-RAY': cfRay, 'X-Amz-Cf-Id': xAmzCfId } = params;\n    return this._client.get(`/v1/models/${modelId}`, {\n      ...options,\n      headers: {\n        ...(cfRay != null ? { 'CF-RAY': cfRay } : undefined),\n        ...(xAmzCfId != null ? { 'X-Amz-Cf-Id': xAmzCfId } : undefined),\n        ...options?.headers,\n      },\n    });\n  }\n\n  /**\n   * List Models\n   */\n  list(params?: ModelListParams, options?: Core.RequestOptions): Core.APIPromise<ModelListResponse>;\n  list(options?: Core.RequestOptions): Core.APIPromise<ModelListResponse>;\n  list(\n    params: ModelListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ModelListResponse> {\n    if (isRequestOptions(params)) {\n      return this.list({}, params);\n    }\n    const { 'CF-RAY': cfRay, 'X-Amz-Cf-Id': xAmzCfId } = params;\n    return this._client.get('/v1/models', {\n      ...options,\n      headers: {\n        ...(cfRay != null ? { 'CF-RAY': cfRay } : undefined),\n        ...(xAmzCfId != null ? { 'X-Amz-Cf-Id': xAmzCfId } : undefined),\n        ...options?.headers,\n      },\n    });\n  }\n}\n\nexport interface ModelRetrieveResponse {\n  id: string;\n\n  created?: number;\n\n  object?: 'model';\n\n  owned_by?: string;\n\n  [k: string]: unknown;\n}\n\nexport interface ModelListResponse {\n  data: Array<ModelListResponse.Data>;\n\n  object?: 'list';\n\n  [k: string]: unknown;\n}\n\nexport namespace ModelListResponse {\n  export interface Data {\n    id: string;\n\n    created?: number;\n\n    object?: 'model';\n\n    owned_by?: string;\n\n    [k: string]: unknown;\n  }\n}\n\nexport interface ModelRetrieveParams {\n  'CF-RAY'?: string;\n\n  'X-Amz-Cf-Id'?: string;\n}\n\nexport interface ModelListParams {\n  'CF-RAY'?: string;\n\n  'X-Amz-Cf-Id'?: string;\n}\n\nexport declare namespace Models {\n  export {\n    type ModelRetrieveResponse as ModelRetrieveResponse,\n    type ModelListResponse as ModelListResponse,\n    type ModelRetrieveParams as ModelRetrieveParams,\n    type ModelListParams as ModelListParams,\n  };\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _OverloadYield(e, d) {\n  this.v = e, this.k = d;\n}\nmodule.exports = _OverloadYield, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export const VERSION = '1.50.0'; // x-release-please-version\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport * from '../web-runtime';\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport { type RequestOptions } from '../core';\n\nexport interface Shims {\n  kind: string;\n  fetch: any;\n  Request: any;\n  Response: any;\n  Headers: any;\n  FormData: any;\n  Blob: any;\n  File: any;\n  ReadableStream: any;\n  getMultipartRequestOptions: <T = Record<string, unknown>>(\n    form: Shims['FormData'],\n    opts: RequestOptions<T>,\n  ) => Promise<RequestOptions<T>>;\n  getDefaultAgent: (url: string) => any;\n  fileFromPath:\n    | ((path: string, filename?: string, options?: {}) => Promise<Shims['File']>)\n    | ((path: string, options?: {}) => Promise<Shims['File']>);\n  isFsReadStream: (value: any) => boolean;\n}\n\nexport let auto = false;\nexport let kind: Shims['kind'] | undefined = undefined;\nexport let fetch: Shims['fetch'] | undefined = undefined;\nexport let Request: Shims['Request'] | undefined = undefined;\nexport let Response: Shims['Response'] | undefined = undefined;\nexport let Headers: Shims['Headers'] | undefined = undefined;\nexport let FormData: Shims['FormData'] | undefined = undefined;\nexport let Blob: Shims['Blob'] | undefined = undefined;\nexport let File: Shims['File'] | undefined = undefined;\nexport let ReadableStream: Shims['ReadableStream'] | undefined = undefined;\nexport let getMultipartRequestOptions: Shims['getMultipartRequestOptions'] | undefined = undefined;\nexport let getDefaultAgent: Shims['getDefaultAgent'] | undefined = undefined;\nexport let fileFromPath: Shims['fileFromPath'] | undefined = undefined;\nexport let isFsReadStream: Shims['isFsReadStream'] | undefined = undefined;\n\nexport function setShims(shims: Shims, options: { auto: boolean } = { auto: false }) {\n  if (auto) {\n    throw new Error(\n      `you must \\`import '@cerebras/cerebras_cloud_sdk/shims/${shims.kind}'\\` before importing anything else from @cerebras/cerebras_cloud_sdk`,\n    );\n  }\n  if (kind) {\n    throw new Error(\n      `can't \\`import '@cerebras/cerebras_cloud_sdk/shims/${shims.kind}'\\` after \\`import '@cerebras/cerebras_cloud_sdk/shims/${kind}'\\``,\n    );\n  }\n  auto = options.auto;\n  kind = shims.kind;\n  fetch = shims.fetch;\n  Request = shims.Request;\n  Response = shims.Response;\n  Headers = shims.Headers;\n  FormData = shims.FormData;\n  Blob = shims.Blob;\n  File = shims.File;\n  ReadableStream = shims.ReadableStream;\n  getMultipartRequestOptions = shims.getMultipartRequestOptions;\n  getDefaultAgent = shims.getDefaultAgent;\n  fileFromPath = shims.fileFromPath;\n  isFsReadStream = shims.isFsReadStream;\n}\n","var OverloadYield = require(\"./OverloadYield.js\");\nfunction _awaitAsyncGenerator(e) {\n  return new OverloadYield(e, 0);\n}\nmodule.exports = _awaitAsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nexport * from './chat/index';\nexport { Completions, type Completion, type CompletionCreateParams } from './completions';\nexport {\n  Models,\n  type ModelRetrieveResponse,\n  type ModelListResponse,\n  type ModelRetrieveParams,\n  type ModelListParams,\n} from './models';\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { castToError, Headers } from './core';\n\nexport class CerebrasError extends Error {}\n\nexport class APIError<\n  TStatus extends number | undefined = number | undefined,\n  THeaders extends Headers | undefined = Headers | undefined,\n  TError extends Object | undefined = Object | undefined,\n> extends CerebrasError {\n  /** HTTP status for the response that caused the error */\n  readonly status: TStatus;\n  /** HTTP headers for the response that caused the error */\n  readonly headers: THeaders;\n  /** JSON body of the response that caused the error */\n  readonly error: TError;\n\n  constructor(status: TStatus, error: TError, message: string | undefined, headers: THeaders) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.error = error;\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ?\n          error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    if (status === undefined || headers === undefined) {\n      return new APIConnectionError({ message, cause: castToError(errorResponse) });\n    }\n\n    const error = errorResponse as Record<string, any>;\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError<undefined, undefined, undefined> {\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError<undefined, undefined, undefined> {\n  constructor({ message, cause }: { message?: string | undefined; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError<400, Headers> {}\n\nexport class AuthenticationError extends APIError<401, Headers> {}\n\nexport class PermissionDeniedError extends APIError<403, Headers> {}\n\nexport class NotFoundError extends APIError<404, Headers> {}\n\nexport class ConflictError extends APIError<409, Headers> {}\n\nexport class UnprocessableEntityError extends APIError<422, Headers> {}\n\nexport class RateLimitError extends APIError<429, Headers> {}\n\nexport class InternalServerError extends APIError<number, Headers> {}\n","function _asyncIterator(r) {\n  var n,\n    t,\n    o,\n    e = 2;\n  for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n    if (t && null != (n = r[t])) return n.call(r);\n    if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n    t = \"@@asyncIterator\", o = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(r) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var n = r.done;\n    return Promise.resolve(r.value).then(function (r) {\n      return {\n        value: r,\n        done: n\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) {\n    this.s = r, this.n = r.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.resolve({\n        value: r,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(r);\n}\nexport { _asyncIterator as default };","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as CompletionsAPI from './completions';\nimport {\n  ChatCompletion,\n  ChatCompletionCreateParams,\n  CompletionCreateParams,\n  Completions,\n} from './completions';\n\nexport class Chat extends APIResource {\n  completions: CompletionsAPI.Completions = new CompletionsAPI.Completions(this._client);\n}\n\nChat.Completions = Completions;\n\nexport declare namespace Chat {\n  export {\n    Completions as Completions,\n    type ChatCompletion as ChatCompletion,\n    type ChatCompletionCreateParams as ChatCompletionCreateParams,\n    type CompletionCreateParams as CompletionCreateParams,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nexport { Chat } from './chat';\nexport {\n  Completions,\n  type ChatCompletion,\n  type ChatCompletionCreateParams,\n  type ChatCompletionCreateParamsNonStreaming,\n  type ChatCompletionCreateParamsStreaming,\n} from './completions';\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n  constructor(public body: any) {}\n  get [Symbol.toStringTag](): string {\n    return 'MultipartBody';\n  }\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { type Agent } from './_shims/index';\nimport * as Core from './core';\nimport * as Errors from './error';\nimport * as Uploads from './uploads';\nimport * as API from './resources/index';\nimport { Completion, CompletionCreateParams, Completions } from './resources/completions';\nimport {\n  ModelListParams,\n  ModelListResponse,\n  ModelRetrieveParams,\n  ModelRetrieveResponse,\n  Models,\n} from './resources/models';\nimport { Chat } from './resources/chat/chat';\nimport { ChatCompletion, ChatCompletionCreateParams } from './resources/chat/completions';\n\nexport interface ClientOptions {\n  /**\n   * Defaults to process.env['CEREBRAS_API_KEY'].\n   */\n  apiKey?: string | undefined;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   *\n   * Defaults to process.env['CEREBRAS_BASE_URL'].\n   */\n  baseURL?: string | null | undefined;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   *\n   * @unit milliseconds\n   */\n  timeout?: number | undefined;\n\n  /**\n   * An HTTP agent used to manage HTTP(S) connections.\n   *\n   * If not provided, an agent will be constructed by default in the Node.js environment,\n   * otherwise no agent is used.\n   */\n  httpAgent?: Agent | undefined;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\n   * defined globally.\n   */\n  fetch?: Core.Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number | undefined;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `undefined` or `null` in request options.\n   */\n  defaultHeaders?: Core.Headers | undefined;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Core.DefaultQuery | undefined;\n\n  /**\n   * When true, a request is sent to `/models` in the constructor to open a TCP\n   * connection with the API server. This way, the first \"real\" request will have\n   * less latency since it can reuse the already existing socket connection.\n   *\n   * @default true\n   */\n  warmTCPConnection?: boolean;\n}\n\n/**\n * API Client for interfacing with the Cerebras API.\n */\nexport class Cerebras extends Core.APIClient {\n  apiKey: string;\n\n  private _options: ClientOptions;\n\n  /**\n   * API Client for interfacing with the Cerebras API.\n   *\n   * @param {string | undefined} [opts.apiKey=process.env['CEREBRAS_API_KEY'] ?? undefined]\n   * @param {string} [opts.baseURL=process.env['CEREBRAS_BASE_URL'] ?? https://api.cerebras.ai] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean | undefined} opts.warmTCPConnection - Whether to warm TCP connection in the constructor.\n   */\n  constructor({\n    baseURL = Core.readEnv('CEREBRAS_BASE_URL'),\n    apiKey = Core.readEnv('CEREBRAS_API_KEY'),\n    warmTCPConnection = true,\n    ...opts\n  }: ClientOptions = {}) {\n    if (apiKey === undefined) {\n      throw new Errors.CerebrasError(\n        \"The CEREBRAS_API_KEY environment variable is missing or empty; either provide it, or instantiate the Cerebras client with an apiKey option, like new Cerebras({ apiKey: 'My API Key' }).\",\n      );\n    }\n\n    const options: ClientOptions = {\n      apiKey,\n      ...opts,\n      baseURL: baseURL || `https://api.cerebras.ai`,\n    };\n\n    super({\n      baseURL: options.baseURL!,\n      baseURLOverridden: baseURL ? baseURL !== 'https://api.cerebras.ai' : false,\n      timeout: options.timeout ?? 60000 /* 1 minute */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch,\n    });\n\n    this._options = options;\n\n    this.apiKey = apiKey;\n\n    if (warmTCPConnection) {\n      // Since this runs async, it's possible for DEBUG messages to\n      // be printed after test ends, which will cause a warming.\n      //\n      // Doesn't seem to be an easy way to block until this promise is fulfilled.\n      (async () => {\n        try {\n          await this.get('/v1/tcp_warming', {\n            timeout: 1000,\n            maxRetries: 0,\n          });\n        } catch (e) {\n          Core.debug(`TCP Warming had exception: ${e}`);\n        }\n      })();\n    }\n  }\n\n  chat: API.Chat = new API.Chat(this);\n  completions: API.Completions = new API.Completions(this);\n  models: API.Models = new API.Models(this);\n\n  /**\n   * Check whether the base URL is set to its default.\n   */\n  #baseURLOverridden(): boolean {\n    return this.baseURL !== 'https://api.cerebras.ai';\n  }\n\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected override defaultHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return {\n      ...super.defaultHeaders(opts),\n      ...this._options.defaultHeaders,\n    };\n  }\n\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return { Authorization: `Bearer ${this.apiKey}` };\n  }\n\n  static Cerebras = this;\n  static DEFAULT_TIMEOUT = 60000; // 1 minute\n\n  static CerebrasError = Errors.CerebrasError;\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static APIUserAbortError = Errors.APIUserAbortError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n\n  static toFile = Uploads.toFile;\n  static fileFromPath = Uploads.fileFromPath;\n}\n\nCerebras.Chat = Chat;\nCerebras.Completions = Completions;\nCerebras.Models = Models;\n\nexport declare namespace Cerebras {\n  export type RequestOptions = Core.RequestOptions;\n\n  export {\n    Chat as Chat,\n    type ChatCompletion as ChatCompletion,\n    type ChatCompletionCreateParams as ChatCompletionCreateParams,\n  };\n\n  export {\n    Completions as Completions,\n    type Completion as Completion,\n    type CompletionCreateParams as CompletionCreateParams,\n  };\n\n  export {\n    Models as Models,\n    type ModelRetrieveResponse as ModelRetrieveResponse,\n    type ModelListResponse as ModelListResponse,\n    type ModelRetrieveParams as ModelRetrieveParams,\n    type ModelListParams as ModelListParams,\n  };\n}\n\nexport { toFile, fileFromPath } from './uploads';\nexport {\n  CerebrasError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError,\n} from './error';\n\nexport default Cerebras;\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../resource';\nimport * as Core from '../../core';\nimport { Stream } from '../../streaming';\n\nexport class Completions extends APIResource {\n  /**\n   * Chat\n   *\n   * @example\n   * ```ts\n   * const chatCompletion = await client.chat.completions.create(\n   *   {\n   *     messages: [{ content: 'string', role: 'system' }],\n   *     model: 'model',\n   *   },\n   * );\n   * ```\n   */\n  create(\n    params: ChatCompletionCreateParamsNonStreaming,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ChatCompletion>;\n  create(\n    params: ChatCompletionCreateParamsStreaming,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Stream<ChatCompletion>>;\n  create(\n    params: ChatCompletionCreateParamsBase,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Stream<ChatCompletion> | ChatCompletion>;\n  create(\n    params: ChatCompletionCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ChatCompletion> | Core.APIPromise<Stream<ChatCompletion>> {\n    const { 'CF-RAY': cfRay, 'X-Amz-Cf-Id': xAmzCfId, 'X-delay-time': xDelayTime, ...body } = params;\n    return this._client.post('/v1/chat/completions', {\n      body,\n      ...options,\n      stream: body.stream ?? false,\n      headers: {\n        ...(cfRay != null ? { 'CF-RAY': cfRay } : undefined),\n        ...(xAmzCfId != null ? { 'X-Amz-Cf-Id': xAmzCfId } : undefined),\n        ...(xDelayTime?.toString() != null ? { 'X-delay-time': xDelayTime?.toString() } : undefined),\n        ...options?.headers,\n      },\n    }) as Core.APIPromise<ChatCompletion> | Core.APIPromise<Stream<ChatCompletion>>;\n  }\n}\n\nexport type ChatCompletion =\n  | ChatCompletion.ChatCompletionResponse\n  | ChatCompletion.ChatChunkResponse\n  | ChatCompletion.ErrorChunkResponse;\n\nexport namespace ChatCompletion {\n  export interface ChatCompletionResponse {\n    id: string;\n\n    choices: Array<ChatCompletionResponse.Choice>;\n\n    created: number;\n\n    model: string;\n\n    object: 'chat.completion';\n\n    system_fingerprint: string;\n\n    time_info: ChatCompletionResponse.TimeInfo;\n\n    usage: ChatCompletionResponse.Usage;\n\n    service_tier?: string | null;\n\n    [k: string]: unknown;\n  }\n\n  export namespace ChatCompletionResponse {\n    export interface Choice {\n      finish_reason: 'stop' | 'length' | 'content_filter' | 'tool_calls';\n\n      index: number;\n\n      message: Choice.Message;\n\n      logprobs?: Choice.Logprobs | null;\n\n      [k: string]: unknown;\n    }\n\n    export namespace Choice {\n      export interface Message {\n        role: 'assistant' | 'user' | 'system' | 'tool';\n\n        content?: string | null;\n\n        reasoning?: string | null;\n\n        tool_calls?: Array<Message.ToolCall> | null;\n\n        [k: string]: unknown;\n      }\n\n      export namespace Message {\n        /**\n         * Non-streaming only. Represents a function call in an assistant tool call.\n         */\n        export interface ToolCall {\n          id: string;\n\n          /**\n           * Non-streaming only. Represents a function call in an assistant tool call.\n           */\n          function: ToolCall.Function;\n\n          type: 'function';\n\n          [k: string]: unknown;\n        }\n\n        export namespace ToolCall {\n          /**\n           * Non-streaming only. Represents a function call in an assistant tool call.\n           */\n          export interface Function {\n            arguments: string;\n\n            name: string;\n\n            [k: string]: unknown;\n          }\n        }\n      }\n\n      export interface Logprobs {\n        content: Array<Logprobs.Content> | null;\n\n        refusal: Array<Logprobs.Refusal> | null;\n\n        [k: string]: unknown;\n      }\n\n      export namespace Logprobs {\n        export interface Content {\n          token: string;\n\n          logprob: number;\n\n          top_logprobs: Array<Content.TopLogprob>;\n\n          bytes?: Array<number> | null;\n\n          [k: string]: unknown;\n        }\n\n        export namespace Content {\n          export interface TopLogprob {\n            token: string;\n\n            logprob: number;\n\n            bytes?: Array<number> | null;\n\n            [k: string]: unknown;\n          }\n        }\n\n        export interface Refusal {\n          token: string;\n\n          logprob: number;\n\n          top_logprobs: Array<Refusal.TopLogprob>;\n\n          bytes?: Array<number> | null;\n\n          [k: string]: unknown;\n        }\n\n        export namespace Refusal {\n          export interface TopLogprob {\n            token: string;\n\n            logprob: number;\n\n            bytes?: Array<number> | null;\n\n            [k: string]: unknown;\n          }\n        }\n      }\n    }\n\n    export interface TimeInfo {\n      completion_time?: number;\n\n      prompt_time?: number;\n\n      queue_time?: number;\n\n      total_time?: number;\n\n      [k: string]: unknown;\n    }\n\n    export interface Usage {\n      completion_tokens?: number;\n\n      prompt_tokens?: number;\n\n      prompt_tokens_details?: Usage.PromptTokensDetails;\n\n      total_tokens?: number;\n\n      [k: string]: unknown;\n    }\n\n    export namespace Usage {\n      export interface PromptTokensDetails {\n        cached_tokens?: number;\n\n        [k: string]: unknown;\n      }\n    }\n  }\n\n  export interface ChatChunkResponse {\n    id: string;\n\n    created: number;\n\n    model: string;\n\n    object: 'chat.completion.chunk';\n\n    system_fingerprint: string;\n\n    choices?: Array<ChatChunkResponse.Choice> | null;\n\n    service_tier?: string | null;\n\n    time_info?: ChatChunkResponse.TimeInfo | null;\n\n    usage?: ChatChunkResponse.Usage | null;\n\n    [k: string]: unknown;\n  }\n\n  export namespace ChatChunkResponse {\n    export interface Choice {\n      delta: Choice.Delta;\n\n      index: number;\n\n      finish_reason?: 'stop' | 'length' | 'content_filter' | 'tool_calls' | null;\n\n      logprobs?: Choice.Logprobs | null;\n\n      [k: string]: unknown;\n    }\n\n    export namespace Choice {\n      export interface Delta {\n        content?: string | null;\n\n        reasoning?: string | null;\n\n        role?: 'assistant' | 'user' | 'system' | 'tool' | null;\n\n        tool_calls?: Array<Delta.ToolCall> | null;\n\n        [k: string]: unknown;\n      }\n\n      export namespace Delta {\n        /**\n         * Streaming only. Represents a function call in an assistant tool call.\n         */\n        export interface ToolCall {\n          /**\n           * Streaming only. Represents a function in an assistant tool call.\n           */\n          function: ToolCall.Function;\n\n          type: 'function';\n\n          id?: string | null;\n\n          index?: number | null;\n\n          [k: string]: unknown;\n        }\n\n        export namespace ToolCall {\n          /**\n           * Streaming only. Represents a function in an assistant tool call.\n           */\n          export interface Function {\n            arguments?: string | null;\n\n            name?: string | null;\n\n            [k: string]: unknown;\n          }\n        }\n      }\n\n      export interface Logprobs {\n        content: Array<Logprobs.Content> | null;\n\n        refusal: Array<Logprobs.Refusal> | null;\n\n        [k: string]: unknown;\n      }\n\n      export namespace Logprobs {\n        export interface Content {\n          token: string;\n\n          logprob: number;\n\n          top_logprobs: Array<Content.TopLogprob>;\n\n          bytes?: Array<number> | null;\n\n          [k: string]: unknown;\n        }\n\n        export namespace Content {\n          export interface TopLogprob {\n            token: string;\n\n            logprob: number;\n\n            bytes?: Array<number> | null;\n\n            [k: string]: unknown;\n          }\n        }\n\n        export interface Refusal {\n          token: string;\n\n          logprob: number;\n\n          top_logprobs: Array<Refusal.TopLogprob>;\n\n          bytes?: Array<number> | null;\n\n          [k: string]: unknown;\n        }\n\n        export namespace Refusal {\n          export interface TopLogprob {\n            token: string;\n\n            logprob: number;\n\n            bytes?: Array<number> | null;\n\n            [k: string]: unknown;\n          }\n        }\n      }\n    }\n\n    export interface TimeInfo {\n      completion_time?: number;\n\n      prompt_time?: number;\n\n      queue_time?: number;\n\n      total_time?: number;\n\n      [k: string]: unknown;\n    }\n\n    export interface Usage {\n      completion_tokens?: number;\n\n      prompt_tokens?: number;\n\n      prompt_tokens_details?: Usage.PromptTokensDetails;\n\n      total_tokens?: number;\n\n      [k: string]: unknown;\n    }\n\n    export namespace Usage {\n      export interface PromptTokensDetails {\n        cached_tokens?: number;\n\n        [k: string]: unknown;\n      }\n    }\n  }\n\n  export interface ErrorChunkResponse {\n    error: ErrorChunkResponse.Error;\n\n    status_code: number;\n\n    [k: string]: unknown;\n  }\n\n  export namespace ErrorChunkResponse {\n    export interface Error {\n      code?: string | null;\n\n      message?: string | null;\n\n      param?: string | null;\n\n      type?: string | null;\n\n      [k: string]: unknown;\n    }\n  }\n}\n\n// This enables us to do matching against the parameter to overload the function and know what the\n// return type will be (whether with or without streaming).\nexport type ChatCompletionCreateParams =\n  | ChatCompletionCreateParamsNonStreaming\n  | ChatCompletionCreateParamsStreaming;\n\nexport interface ChatCompletionCreateParamsNonStreaming extends ChatCompletionCreateParamsBase {\n  stream?: false | null;\n}\n\nexport interface ChatCompletionCreateParamsStreaming extends ChatCompletionCreateParamsBase {\n  stream: true;\n}\n\nexport interface ChatCompletionCreateParamsBase {\n  /**\n   * Body param:\n   */\n  messages: Array<\n    | ChatCompletionCreateParams.SystemMessageRequest\n    | ChatCompletionCreateParams.UserMessageRequest\n    | ChatCompletionCreateParams.AssistantMessageRequest\n    | ChatCompletionCreateParams.ToolMessageRequest\n  >;\n\n  /**\n   * Body param:\n   */\n  model: string;\n\n  /**\n   * Body param: Number between -2.0 and 2.0. Positive values penalize new tokens\n   * based on their existing frequency in the text so far, decreasing the model's\n   * likelihood to repeat the same line verbatim.\n   */\n  frequency_penalty?: number | null;\n\n  /**\n   * Body param: Modify the likelihood of specified tokens appearing in the\n   * completion.\n   *\n   * Accepts a JSON object that maps tokens (specified by their token ID in the\n   * tokenizer) to an associated bias value from -100 to 100. Mathematically, the\n   * bias is added to the logits generated by the model prior to sampling. The exact\n   * effect will vary per model, but values between -1 and 1 should decrease or\n   * increase likelihood of selection; values like -100 or 100 should result in a ban\n   * or exclusive selection of the relevant token.\n   */\n  logit_bias?: unknown | null;\n\n  /**\n   * Body param: Whether to return log probabilities of the output tokens or not. If\n   * true, returns the log probabilities of each output token returned in the content\n   * of message.\n   */\n  logprobs?: boolean | null;\n\n  /**\n   * Body param: An upper bound for the number of tokens that can be generated for a\n   * completion, including visible output tokens and reasoning tokens.\n   */\n  max_completion_tokens?: number | null;\n\n  /**\n   * Body param: The maximum number of tokens that can be generated in the chat\n   * completion. The total length of input tokens and generated tokens is limited by\n   * the model's context length. This value is now deprecated in favor of\n   * max_completion_tokens.\n   */\n  max_tokens?: number | null;\n\n  /**\n   * Body param: The minimum number of tokens to generate for a completion. If not\n   * specified or set to 0, the model will generate as many tokens as it deems\n   * necessary. Setting to -1 sets to max sequence length.\n   */\n  min_completion_tokens?: number | null;\n\n  /**\n   * Body param: The minimum number of tokens to generate for a completion. If not\n   * specified or set to 0, the model will generate as many tokens as it deems\n   * necessary. Setting to -1 sets to max sequence length.\n   */\n  min_tokens?: number | null;\n\n  /**\n   * Body param: How many chat completion choices to generate for each input message.\n   * Note that you will be charged based on the number of generated tokens across all\n   * of the choices. Keep n as 1 to minimize costs.\n   */\n  n?: number | null;\n\n  /**\n   * Body param:\n   */\n  parallel_tool_calls?: boolean | null;\n\n  /**\n   * Body param: Number between -2.0 and 2.0. Positive values penalize new tokens\n   * based on whether they appear in the text so far, increasing the model's\n   * likelihood to talk about new topics.\n   */\n  presence_penalty?: number | null;\n\n  /**\n   * Body param: Constrains effort on reasoning for reasoning models. Currently\n   * supported values are low, medium, and high. Reducing reasoning effort can result\n   * in faster responses and fewer tokens used on reasoning in a response. If set to\n   * None, the model will use the default reasoning effort for the model.\n   */\n  reasoning_effort?: 'low' | 'medium' | 'high' | null;\n\n  /**\n   * Body param:\n   */\n  response_format?:\n    | ChatCompletionCreateParams.ResponseFormatText\n    | ChatCompletionCreateParams.ResponseFormatJsonObject\n    | ChatCompletionCreateParams.ResponseFormatJsonSchema\n    | null;\n\n  /**\n   * Body param: If specified, our system will make a best effort to sample\n   * deterministically, such that repeated requests with the same `seed` and\n   * parameters should return the same result. Determinism is not guaranteed.\n   */\n  seed?: number | null;\n\n  /**\n   * Body param:\n   */\n  service_tier?: 'auto' | 'default' | null;\n\n  /**\n   * Body param: Up to 4 sequences where the API will stop generating further tokens.\n   * The returned text will not contain the stop sequence.\n   */\n  stop?: string | Array<string> | null;\n\n  /**\n   * Body param:\n   */\n  stream?: boolean | null;\n\n  /**\n   * Body param:\n   */\n  stream_options?: ChatCompletionCreateParams.StreamOptions | null;\n\n  /**\n   * Body param: What sampling temperature to use, between 0 and 1.5. Higher values\n   * like 0.8 will make the output more random, while lower values like 0.2 will make\n   * it more focused and deterministic. We generally recommend altering this or\n   * `top_p` but not both.\n   */\n  temperature?: number | null;\n\n  /**\n   * Body param:\n   */\n  tool_choice?: 'none' | 'auto' | 'required' | ChatCompletionCreateParams.ChoiceObject | null;\n\n  /**\n   * Body param:\n   */\n  tools?: Array<ChatCompletionCreateParams.Tool> | null;\n\n  /**\n   * Body param: An integer between 0 and 20 specifying the number of most likely\n   * tokens to return at each token position, each with an associated log\n   * probability. logprobs must be set to true if this parameter is used.\n   */\n  top_logprobs?: number | null;\n\n  /**\n   * Body param: An alternative to sampling with temperature, called nucleus\n   * sampling, where the model considers the results of the tokens with top_p\n   * probability mass. So 0.1 means only the tokens comprising the top 10%\n   * probability mass are considered. We generally recommend altering this or\n   * `temperature` but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Body param: A unique identifier representing your end-user, which can help\n   * Cerebras to monitor and detect abuse.\n   */\n  user?: string | null;\n\n  /**\n   * Header param:\n   */\n  'CF-RAY'?: string;\n\n  /**\n   * Header param:\n   */\n  'X-Amz-Cf-Id'?: string;\n\n  /**\n   * Header param:\n   */\n  'X-delay-time'?: number;\n}\n\nexport namespace ChatCompletionCreateParams {\n  export interface SystemMessageRequest {\n    content: string | Array<SystemMessageRequest.UnionMember1>;\n\n    role: 'system';\n\n    name?: string | null;\n\n    [k: string]: unknown;\n  }\n\n  export namespace SystemMessageRequest {\n    export interface UnionMember1 {\n      text: string;\n\n      type: 'text';\n\n      [k: string]: unknown;\n    }\n  }\n\n  export interface UserMessageRequest {\n    content: string | Array<UserMessageRequest.UnionMember1>;\n\n    role: 'user';\n\n    name?: string | null;\n\n    [k: string]: unknown;\n  }\n\n  export namespace UserMessageRequest {\n    export interface UnionMember1 {\n      text: string;\n\n      type: 'text';\n\n      [k: string]: unknown;\n    }\n  }\n\n  export interface AssistantMessageRequest {\n    content?: string | Array<AssistantMessageRequest.UnionMember1> | null;\n\n    name?: string | null;\n\n    reasoning?: string | null;\n\n    role?: 'assistant';\n\n    tool_calls?: Array<AssistantMessageRequest.ToolCall> | null;\n\n    [k: string]: unknown;\n  }\n\n  export namespace AssistantMessageRequest {\n    export interface UnionMember1 {\n      text: string;\n\n      type: 'text';\n\n      [k: string]: unknown;\n    }\n\n    /**\n     * Non-streaming only. Represents a function call in an assistant tool call.\n     */\n    export interface ToolCall {\n      id: string;\n\n      /**\n       * Non-streaming only. Represents a function call in an assistant tool call.\n       */\n      function: ToolCall.Function;\n\n      type: 'function';\n\n      [k: string]: unknown;\n    }\n\n    export namespace ToolCall {\n      /**\n       * Non-streaming only. Represents a function call in an assistant tool call.\n       */\n      export interface Function {\n        arguments: string;\n\n        name: string;\n\n        [k: string]: unknown;\n      }\n    }\n  }\n\n  export interface ToolMessageRequest {\n    role: 'tool';\n\n    tool_call_id: string;\n\n    name?: string | null;\n\n    [k: string]: unknown;\n  }\n\n  export interface ResponseFormatText {\n    type: 'text';\n\n    [k: string]: unknown;\n  }\n\n  export interface ResponseFormatJsonObject {\n    type: 'json_object';\n\n    [k: string]: unknown;\n  }\n\n  export interface ResponseFormatJsonSchema {\n    json_schema: ResponseFormatJsonSchema.JsonSchema;\n\n    type: 'json_schema';\n\n    [k: string]: unknown;\n  }\n\n  export namespace ResponseFormatJsonSchema {\n    export interface JsonSchema {\n      name: string;\n\n      description?: string | null;\n\n      schema?: unknown | null;\n\n      strict?: boolean | null;\n\n      [k: string]: unknown;\n    }\n  }\n\n  export interface StreamOptions {\n    include_usage?: boolean | null;\n\n    [k: string]: unknown;\n  }\n\n  export interface ChoiceObject {\n    function: ChoiceObject.Function;\n\n    type: string;\n\n    [k: string]: unknown;\n  }\n\n  export namespace ChoiceObject {\n    export interface Function {\n      name: string;\n\n      [k: string]: unknown;\n    }\n  }\n\n  export interface Tool {\n    function: Tool.Function;\n\n    type: string;\n\n    [k: string]: unknown;\n  }\n\n  export namespace Tool {\n    export interface Function {\n      name: string;\n\n      description?: string | null;\n\n      /**\n       * Represents the parameters a function accepts. This model is designed to be\n       * flexible to accommodate any JSON Schema. The key-value pairs you provide will\n       * define the parameters.\n       */\n      parameters?: unknown | null;\n\n      [k: string]: unknown;\n    }\n  }\n}\n\n/**\n * @deprecated Use ChatCompletionCreateParams instead\n */\nexport type CompletionCreateParams = ChatCompletionCreateParams;\n\n/**\n * @deprecated Use ChatCompletion instead\n */\nexport type CompletionCreateResponse = ChatCompletion;\n\nexport declare namespace Completions {\n  export {\n    type CompletionCreateResponse as CompletionCreateResponse,\n    type ChatCompletion as ChatCompletion,\n    type CompletionCreateParams as CompletionCreateParams,\n    type ChatCompletionCreateParams as ChatCompletionCreateParams,\n    type ChatCompletionCreateParamsNonStreaming as ChatCompletionCreateParamsNonStreaming,\n    type ChatCompletionCreateParamsStreaming as ChatCompletionCreateParamsStreaming,\n  };\n}\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\nimport { Stream } from '../streaming';\n\nexport class Completions extends APIResource {\n  /**\n   * Completions\n   *\n   * @example\n   * ```ts\n   * const completion = await client.completions.create({\n   *   model: 'model',\n   * });\n   * ```\n   */\n  create(\n    params: CompletionCreateParamsNonStreaming,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Completion>;\n  create(\n    params: CompletionCreateParamsStreaming,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Stream<Completion.CompletionResponse>>;\n  create(\n    params: CompletionCreateParamsBase,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Stream<Completion.CompletionResponse> | Completion>;\n  create(\n    params: CompletionCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<Completion> | Core.APIPromise<Stream<Completion.CompletionResponse>> {\n    const { 'CF-RAY': cfRay, 'X-Amz-Cf-Id': xAmzCfId, 'X-delay-time': xDelayTime, ...body } = params;\n    return this._client.post('/v1/completions', {\n      body,\n      ...options,\n      stream: body.stream ?? false,\n      headers: {\n        ...(cfRay != null ? { 'CF-RAY': cfRay } : undefined),\n        ...(xAmzCfId != null ? { 'X-Amz-Cf-Id': xAmzCfId } : undefined),\n        ...(xDelayTime?.toString() != null ? { 'X-delay-time': xDelayTime?.toString() } : undefined),\n        ...options?.headers,\n      },\n    }) as Core.APIPromise<Completion> | Core.APIPromise<Stream<Completion.CompletionResponse>>;\n  }\n}\n\nexport type Completion = Completion.CompletionResponse | Completion.ErrorChunkResponse;\n\nexport namespace Completion {\n  export interface CompletionResponse {\n    id: string;\n\n    choices: Array<CompletionResponse.Choice>;\n\n    created: number;\n\n    model: string;\n\n    object: 'text_completion';\n\n    system_fingerprint: string;\n\n    time_info?: CompletionResponse.TimeInfo | null;\n\n    usage?: CompletionResponse.Usage | null;\n\n    [k: string]: unknown;\n  }\n\n  export namespace CompletionResponse {\n    export interface Choice {\n      index: number;\n\n      finish_reason?: 'stop' | 'length' | 'content_filter' | null;\n\n      logprobs?: Choice.Logprobs | null;\n\n      text?: string | null;\n\n      tokens?: Array<number> | null;\n\n      [k: string]: unknown;\n    }\n\n    export namespace Choice {\n      export interface Logprobs {\n        text_offset?: Array<number> | null;\n\n        token_logprobs?: Array<number> | null;\n\n        tokens?: Array<string> | null;\n\n        top_logprobs?: Array<{ [key: string]: number }> | null;\n\n        [k: string]: unknown;\n      }\n    }\n\n    export interface TimeInfo {\n      completion_time?: number;\n\n      prompt_time?: number;\n\n      queue_time?: number;\n\n      total_time?: number;\n\n      [k: string]: unknown;\n    }\n\n    export interface Usage {\n      completion_tokens?: number;\n\n      prompt_tokens?: number;\n\n      prompt_tokens_details?: Usage.PromptTokensDetails;\n\n      total_tokens?: number;\n\n      [k: string]: unknown;\n    }\n\n    export namespace Usage {\n      export interface PromptTokensDetails {\n        cached_tokens?: number;\n\n        [k: string]: unknown;\n      }\n    }\n  }\n\n  export interface ErrorChunkResponse {\n    error: ErrorChunkResponse.Error;\n\n    status_code: number;\n\n    [k: string]: unknown;\n  }\n\n  export namespace ErrorChunkResponse {\n    export interface Error {\n      code?: string | null;\n\n      message?: string | null;\n\n      param?: string | null;\n\n      type?: string | null;\n\n      [k: string]: unknown;\n    }\n  }\n}\n\n// This enables us to do matching against the parameter to overload the function and know what the\n// return type will be (whether with or without streaming).\nexport type CompletionCreateParams = CompletionCreateParamsNonStreaming | CompletionCreateParamsStreaming;\n\nexport interface CompletionCreateParamsNonStreaming extends CompletionCreateParamsBase {\n  stream?: false | null;\n}\n\nexport interface CompletionCreateParamsStreaming extends CompletionCreateParamsBase {\n  stream: true;\n}\n\nexport interface CompletionCreateParamsBase {\n  /**\n   * Body param:\n   */\n  model: string;\n\n  /**\n   * Body param: Generates `best_of` completions server-side and returns the \"best\"\n   * (the one with the highest log probability per token). Results cannot be\n   * streamed. When used with `n`, `best_of` controls the number of candidate\n   * completions and `n` specifies how many to return – `best_of` must be greater\n   * than `n`. **Note:** Because this parameter generates many completions, it can\n   * quickly consume your token quota. Use carefully and ensure that you have\n   * reasonable settings for `max_tokens` and `stop`\n   */\n  best_of?: number | null;\n\n  /**\n   * Body param: Echo back the prompt in addition to the completion\n   */\n  echo?: boolean | null;\n\n  /**\n   * Body param: Number between -2.0 and 2.0. Positive values penalize new tokens\n   * based on their existing frequency in the text so far, decreasing the model's\n   * likelihood to repeat the same line verbatim.\n   */\n  frequency_penalty?: number | null;\n\n  /**\n   * Body param: The grammar root used for structured output generation.\n   */\n  grammar_root?: string | null;\n\n  /**\n   * Body param: Modify the likelihood of specified tokens appearing in the\n   * completion.\n   *\n   * Accepts a JSON object that maps tokens (specified by their token ID in the\n   * tokenizer) to an associated bias value from -100 to 100. Mathematically, the\n   * bias is added to the logits generated by the model prior to sampling. The exact\n   * effect will vary per model, but values between -1 and 1 should decrease or\n   * increase likelihood of selection; values like -100 or 100 should result in a ban\n   * or exclusive selection of the relevant token.\n   */\n  logit_bias?: unknown | null;\n\n  /**\n   * Body param: Whether to return log probabilities of the output tokens or not. If\n   * true, returns the log probabilities of each output token returned in the content\n   * of message.\n   */\n  logprobs?: boolean | null;\n\n  /**\n   * Body param: The maximum number of tokens that can be generated in the chat\n   * completion. The total length of input tokens and generated tokens is limited by\n   * the model's context length.\n   */\n  max_tokens?: number | null;\n\n  /**\n   * Body param: The minimum number of tokens to generate for a completion. If not\n   * specified or set to 0, the model will generate as many tokens as it deems\n   * necessary. Setting to -1 sets to max sequence length.\n   */\n  min_tokens?: number | null;\n\n  /**\n   * Body param: How many chat completion choices to generate for each input message.\n   * Note that you will be charged based on the number of generated tokens across all\n   * of the choices. Keep n as 1 to minimize costs.\n   */\n  n?: number | null;\n\n  /**\n   * Body param: Number between -2.0 and 2.0. Positive values penalize new tokens\n   * based on whether they appear in the text so far, increasing the model's\n   * likelihood to talk about new topics.\n   */\n  presence_penalty?: number | null;\n\n  /**\n   * Body param: The prompt(s) to generate completions for, encoded as a string,\n   * array of strings, array of tokens, or array of token arrays.\n   */\n  prompt?: string | Array<string> | Array<number> | Array<Array<number>>;\n\n  /**\n   * Body param: Return raw tokens instead of text\n   */\n  return_raw_tokens?: boolean | null;\n\n  /**\n   * Body param: If specified, our system will make a best effort to sample\n   * deterministically, such that repeated requests with the same `seed` and\n   * parameters should return the same result. Determinism is not guaranteed.\n   */\n  seed?: number | null;\n\n  /**\n   * Body param: Up to 4 sequences where the API will stop generating further tokens.\n   * The returned text will not contain the stop sequence.\n   */\n  stop?: string | Array<string> | null;\n\n  /**\n   * Body param:\n   */\n  stream?: boolean | null;\n\n  /**\n   * Body param:\n   */\n  stream_options?: CompletionCreateParams.StreamOptions | null;\n\n  /**\n   * Body param: The suffix that comes after a completion of inserted text. (OpenAI\n   * feature, not supported)\n   */\n  suffix?: string | null;\n\n  /**\n   * Body param: What sampling temperature to use, between 0 and 1.5. Higher values\n   * like 0.8 will make the output more random, while lower values like 0.2 will make\n   * it more focused and deterministic. We generally recommend altering this or\n   * `top_p` but not both.\n   */\n  temperature?: number | null;\n\n  /**\n   * Body param: An alternative to sampling with temperature, called nucleus\n   * sampling, where the model considers the results of the tokens with top_p\n   * probability mass. So 0.1 means only the tokens comprising the top 10%\n   * probability mass are considered. We generally recommend altering this or\n   * `temperature` but not both.\n   */\n  top_p?: number | null;\n\n  /**\n   * Body param: A unique identifier representing your end-user, which can help\n   * Cerebras to monitor and detect abuse.\n   */\n  user?: string | null;\n\n  /**\n   * Header param:\n   */\n  'CF-RAY'?: string;\n\n  /**\n   * Header param:\n   */\n  'X-Amz-Cf-Id'?: string;\n\n  /**\n   * Header param:\n   */\n  'X-delay-time'?: number;\n}\n\nexport namespace CompletionCreateParams {\n  export interface StreamOptions {\n    include_usage?: boolean | null;\n\n    [k: string]: unknown;\n  }\n}\n\nexport declare namespace Completions {\n  export { type Completion as Completion, type CompletionCreateParams as CompletionCreateParams };\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nconst shims = require('./registry');\nconst auto = require('@cerebras/cerebras_cloud_sdk/_shims/auto/runtime');\nexports.init = () => {\n  if (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\n};\nfor (const property of Object.keys(shims)) {\n  Object.defineProperty(exports, property, {\n    get() {\n      return shims[property];\n    },\n  });\n}\n\nexports.init();\n","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport { MultipartBody } from './MultipartBody';\nimport { type RequestOptions } from '../core';\nimport { type Shims } from './registry';\n\nexport function getRuntime({ manuallyImported }: { manuallyImported?: boolean } = {}): Shims {\n  const recommendation =\n    manuallyImported ?\n      `You may need to use polyfills`\n    : `Add one of these imports before your first \\`import … from '@cerebras/cerebras_cloud_sdk'\\`:\n- \\`import '@cerebras/cerebras_cloud_sdk/shims/node'\\` (if you're running on Node)\n- \\`import '@cerebras/cerebras_cloud_sdk/shims/web'\\` (otherwise)\n`;\n\n  let _fetch, _Request, _Response, _Headers;\n  try {\n    // @ts-ignore\n    _fetch = fetch;\n    // @ts-ignore\n    _Request = Request;\n    // @ts-ignore\n    _Response = Response;\n    // @ts-ignore\n    _Headers = Headers;\n  } catch (error) {\n    throw new Error(\n      `this environment is missing the following Web Fetch API type: ${\n        (error as any).message\n      }. ${recommendation}`,\n    );\n  }\n\n  return {\n    kind: 'web',\n    fetch: _fetch,\n    Request: _Request,\n    Response: _Response,\n    Headers: _Headers,\n    FormData:\n      // @ts-ignore\n      typeof FormData !== 'undefined' ? FormData : (\n        class FormData {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    Blob:\n      typeof Blob !== 'undefined' ? Blob : (\n        class Blob {\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    File:\n      // @ts-ignore\n      typeof File !== 'undefined' ? File : (\n        class File {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    ReadableStream:\n      // @ts-ignore\n      typeof ReadableStream !== 'undefined' ? ReadableStream : (\n        class ReadableStream {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    getMultipartRequestOptions: async <T = Record<string, unknown>>(\n      // @ts-ignore\n      form: FormData,\n      opts: RequestOptions<T>,\n    ): Promise<RequestOptions<T>> => ({\n      ...opts,\n      body: new MultipartBody(form) as any,\n    }),\n    getDefaultAgent: (url: string) => undefined,\n    fileFromPath: () => {\n      throw new Error(\n        'The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/Cerebras/cerebras-cloud-sdk-node#file-uploads',\n      );\n    },\n    isFsReadStream: (value: any) => false,\n  };\n}\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport type { Cerebras } from './index';\n\nexport abstract class APIResource {\n  protected _client: Cerebras;\n\n  constructor(client: Cerebras) {\n    this._client = client;\n  }\n}\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _asyncIterator(r) {\n  var n,\n    t,\n    o,\n    e = 2;\n  for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n    if (t && null != (n = r[t])) return n.call(r);\n    if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n    t = \"@@asyncIterator\", o = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(r) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var n = r.done;\n    return Promise.resolve(r.value).then(function (r) {\n      return {\n        value: r,\n        done: n\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) {\n    this.s = r, this.n = r.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.resolve({\n        value: r,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(r);\n}\nmodule.exports = _asyncIterator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { type RequestOptions } from './core';\nimport {\n  FormData,\n  File,\n  type Blob,\n  type FilePropertyBag,\n  getMultipartRequestOptions,\n  type FsReadStream,\n  isFsReadStream,\n} from './_shims/index';\nimport { MultipartBody } from './_shims/MultipartBody';\nexport { fileFromPath } from './_shims/index';\n\ntype BlobLikePart = string | ArrayBuffer | ArrayBufferView | BlobLike | Uint8Array | DataView;\nexport type BlobPart = string | ArrayBuffer | ArrayBufferView | Blob | Uint8Array | DataView;\n\n/**\n * Typically, this is a native \"File\" class.\n *\n * We provide the {@link toFile} utility to convert a variety of objects\n * into the File class.\n *\n * For convenience, you can also pass a fetch Response, or in Node,\n * the result of fs.createReadStream().\n */\nexport type Uploadable = FileLike | ResponseLike | FsReadStream;\n\n/**\n * Intended to match web.Blob, node.Blob, node-fetch.Blob, etc.\n */\nexport interface BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size) */\n  readonly size: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type) */\n  readonly type: string;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text) */\n  text(): Promise<string>;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice) */\n  slice(start?: number, end?: number): BlobLike;\n  // unfortunately @types/node-fetch@^2.6.4 doesn't type the arrayBuffer method\n}\n\n/**\n * Intended to match web.File, node.File, node-fetch.File, etc.\n */\nexport interface FileLike extends BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified) */\n  readonly lastModified: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name) */\n  readonly name: string;\n}\n\n/**\n * Intended to match web.Response, node.Response, node-fetch.Response, etc.\n */\nexport interface ResponseLike {\n  url: string;\n  blob(): Promise<BlobLike>;\n}\n\nexport const isResponseLike = (value: any): value is ResponseLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.url === 'string' &&\n  typeof value.blob === 'function';\n\nexport const isFileLike = (value: any): value is FileLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.name === 'string' &&\n  typeof value.lastModified === 'number' &&\n  isBlobLike(value);\n\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value: any): value is BlobLike & { arrayBuffer(): Promise<ArrayBuffer> } =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.text === 'function' &&\n  typeof value.slice === 'function' &&\n  typeof value.arrayBuffer === 'function';\n\nexport const isUploadable = (value: any): value is Uploadable => {\n  return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n\nexport type ToFileInput = Uploadable | Exclude<BlobLikePart, string> | AsyncIterable<BlobLikePart>;\n\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(\n  value: ToFileInput | PromiseLike<ToFileInput>,\n  name?: string | null | undefined,\n  options?: FilePropertyBag | undefined,\n): Promise<FileLike> {\n  // If it's a promise, resolve it.\n  value = await value;\n\n  // If we've been given a `File` we don't need to do anything\n  if (isFileLike(value)) {\n    return value;\n  }\n\n  if (isResponseLike(value)) {\n    const blob = await value.blob();\n    name ||= new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file';\n\n    // we need to convert the `Blob` into an array buffer because the `Blob` class\n    // that `node-fetch` defines is incompatible with the web standard which results\n    // in `new File` interpreting it as a string instead of binary data.\n    const data = isBlobLike(blob) ? [(await blob.arrayBuffer()) as any] : [blob];\n\n    return new File(data, name, options);\n  }\n\n  const bits = await getBytes(value);\n\n  name ||= getName(value) ?? 'unknown_file';\n\n  if (!options?.type) {\n    const type = (bits[0] as any)?.type;\n    if (typeof type === 'string') {\n      options = { ...options, type };\n    }\n  }\n\n  return new File(bits, name, options);\n}\n\nasync function getBytes(value: ToFileInput): Promise<Array<BlobPart>> {\n  let parts: Array<BlobPart> = [];\n  if (\n    typeof value === 'string' ||\n    ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer\n  ) {\n    parts.push(value);\n  } else if (isBlobLike(value)) {\n    parts.push(await value.arrayBuffer());\n  } else if (\n    isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n  ) {\n    for await (const chunk of value) {\n      parts.push(chunk as BlobPart); // TODO, consider validating?\n    }\n  } else {\n    throw new Error(\n      `Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n        ?.name}; props: ${propsForError(value)}`,\n    );\n  }\n\n  return parts;\n}\n\nfunction propsForError(value: any): string {\n  const props = Object.getOwnPropertyNames(value);\n  return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n\nfunction getName(value: any): string | undefined {\n  return (\n    getStringFromMaybeBuffer(value.name) ||\n    getStringFromMaybeBuffer(value.filename) ||\n    // For fs.ReadStream\n    getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop()\n  );\n}\n\nconst getStringFromMaybeBuffer = (x: string | Buffer | unknown): string | undefined => {\n  if (typeof x === 'string') return x;\n  if (typeof Buffer !== 'undefined' && x instanceof Buffer) return String(x);\n  return undefined;\n};\n\nconst isAsyncIterableIterator = (value: any): value is AsyncIterableIterator<unknown> =>\n  value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n\nexport const isMultipartBody = (body: any): body is MultipartBody =>\n  body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async <T = Record<string, unknown>>(\n  opts: RequestOptions<T>,\n): Promise<RequestOptions<T | MultipartBody>> => {\n  if (!hasUploadableValue(opts.body)) return opts;\n\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\n\nexport const multipartFormRequestOptions = async <T = Record<string, unknown>>(\n  opts: RequestOptions<T>,\n): Promise<RequestOptions<T | MultipartBody>> => {\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\n\nexport const createForm = async <T = Record<string, unknown>>(body: T | undefined): Promise<FormData> => {\n  const form = new FormData();\n  await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n  return form;\n};\n\nconst hasUploadableValue = (value: unknown): boolean => {\n  if (isUploadable(value)) return true;\n  if (Array.isArray(value)) return value.some(hasUploadableValue);\n  if (value && typeof value === 'object') {\n    for (const k in value) {\n      if (hasUploadableValue((value as any)[k])) return true;\n    }\n  }\n  return false;\n};\n\nconst addFormValue = async (form: FormData, key: string, value: unknown): Promise<void> => {\n  if (value === undefined) return;\n  if (value == null) {\n    throw new TypeError(\n      `Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`,\n    );\n  }\n\n  // TODO: make nested formats configurable\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    form.append(key, String(value));\n  } else if (isUploadable(value)) {\n    const file = await toFile(value);\n    form.append(key, file as File);\n  } else if (Array.isArray(value)) {\n    await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n  } else if (typeof value === 'object') {\n    await Promise.all(\n      Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)),\n    );\n  } else {\n    throw new TypeError(\n      `Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`,\n    );\n  }\n};\n","import { VERSION } from './version';\nimport { Stream } from './streaming';\nimport {\n  CerebrasError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n} from './error';\nimport {\n  kind as shimsKind,\n  type Readable,\n  getDefaultAgent,\n  type Agent,\n  fetch,\n  type RequestInfo,\n  type RequestInit,\n  type Response,\n  type HeadersInit,\n  init,\n} from './_shims/index';\n\n// try running side effects outside of _shims/index to workaround https://github.com/vercel/next.js/issues/76881\ninit();\n\nexport { type Response };\nimport { BlobLike, isBlobLike, isMultipartBody } from './uploads';\nexport {\n  maybeMultipartFormRequestOptions,\n  multipartFormRequestOptions,\n  createForm,\n  type Uploadable,\n} from './uploads';\n\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\n\n/**\n * An alias to the builtin `Array` type so we can\n * easily alias it in import statements if there are name clashes.\n */\ntype _Array<T> = Array<T>;\n\n/**\n * An alias to the builtin `Record` type so we can\n * easily alias it in import statements if there are name clashes.\n */\ntype _Record<K extends keyof any, T> = Record<K, T>;\n\nexport type { _Array as Array, _Record as Record };\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\ntype APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n};\n\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<T> {\n  const { response } = props;\n  if (props.options.stream) {\n    debug('response', response.status, response.url, response.headers, response.body);\n\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n\n    if (props.options.__streamClass) {\n      return props.options.__streamClass.fromSSEResponse(response, props.controller) as any;\n    }\n\n    return Stream.fromSSEResponse(response, props.controller) as any;\n  }\n\n  // fetch refuses to read the body when the status code is 204.\n  if (response.status === 204) {\n    return null as T;\n  }\n\n  if (props.options.__binaryResponse) {\n    return response as unknown as T;\n  }\n\n  const contentType = response.headers.get('content-type');\n  const mediaType = contentType?.split(';')[0]?.trim();\n  const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n  if (isJSON) {\n    const json = await response.json();\n\n    debug('response', response.status, response.url, response.headers, json);\n\n    return json as T;\n  }\n\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n\n  // TODO handle blob, arraybuffer, other content types, etc.\n  return text as unknown as T;\n}\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<T> {\n  private parsedPromise: Promise<T> | undefined;\n\n  constructor(\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (props: APIResponseProps) => PromiseOrValue<T> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n  }\n\n  _thenUnwrap<U>(transform: (data: T, props: APIResponseProps) => U): APIPromise<U> {\n    return new APIPromise(this.responsePromise, async (props) =>\n      transform(await this.parseResponse(props), props),\n    );\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * 👋 Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import … from '@cerebras/cerebras_cloud_sdk'`:\n   * - `import '@cerebras/cerebras_cloud_sdk/shims/node'` (if you're running on Node)\n   * - `import '@cerebras/cerebras_cloud_sdk/shims/web'` (otherwise)\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n  /**\n   * Gets the parsed response data and the raw `Response` instance.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   *\n   * 👋 Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import … from '@cerebras/cerebras_cloud_sdk'`:\n   * - `import '@cerebras/cerebras_cloud_sdk/shims/node'` (if you're running on Node)\n   * - `import '@cerebras/cerebras_cloud_sdk/shims/web'` (otherwise)\n   */\n  async withResponse(): Promise<{ data: T; response: Response }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response };\n  }\n\n  private parse(): Promise<T> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<T | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<T> {\n    return this.parse().finally(onfinally);\n  }\n}\n\nexport abstract class APIClient {\n  baseURL: string;\n  #baseURLOverridden: boolean;\n  maxRetries: number;\n  timeout: number;\n  httpAgent: Agent | undefined;\n\n  private fetch: Fetch;\n  protected idempotencyHeader?: string;\n\n  constructor({\n    baseURL,\n    baseURLOverridden,\n    maxRetries = 2,\n    timeout = 60000, // 1 minute\n    httpAgent,\n    fetch: overriddenFetch,\n  }: {\n    baseURL: string;\n    baseURLOverridden: boolean;\n    maxRetries?: number | undefined;\n    timeout: number | undefined;\n    httpAgent: Agent | undefined;\n    fetch: Fetch | undefined;\n  }) {\n    this.baseURL = baseURL;\n    this.#baseURLOverridden = baseURLOverridden;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n\n    this.fetch = overriddenFetch ?? fetch;\n  }\n\n  protected authHeaders(opts: FinalRequestOptions): Headers {\n    return {};\n  }\n\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  protected defaultHeaders(opts: FinalRequestOptions): Headers {\n    return {\n      Accept: 'application/json',\n      ...(['head', 'get'].includes(opts.method) ? {} : { 'Content-Type': 'application/json' }),\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts),\n    };\n  }\n\n  protected abstract defaultQuery(): DefaultQuery | undefined;\n\n  /**\n   * Override this to add your own headers validation:\n   */\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  get<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Req, Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions<Req>>,\n  ): APIPromise<Rsp> {\n    return this.request(\n      Promise.resolve(opts).then(async (opts) => {\n        const body =\n          opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n          : opts?.body instanceof DataView ? opts.body\n          : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n          : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n          : opts?.body;\n        return { method, path, ...opts, body };\n      }),\n    );\n  }\n\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions<any>,\n  ): PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  private calculateContentLength(body: unknown): string | null {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    } else if (ArrayBuffer.isView(body)) {\n      return body.byteLength.toString();\n    }\n\n    return null;\n  }\n\n  async buildRequest<Req>(\n    inputOptions: FinalRequestOptions<Req>,\n    { retryCount = 0 }: { retryCount?: number } = {},\n  ): Promise<{ req: RequestInit; url: string; timeout: number }> {\n    const options = { ...inputOptions };\n    const { method, path, query, defaultBaseURL, headers: headers = {} } = options;\n\n    const body =\n      ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n        options.body\n      : isMultipartBody(options.body) ? options.body.body\n      : options.body ? JSON.stringify(options.body, null, 2)\n      : null;\n    const contentLength = this.calculateContentLength(body);\n\n    const url = this.buildURL(path!, query, defaultBaseURL);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    options.timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = options.timeout + 1000;\n    if (\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\n    ) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      (httpAgent as any).options.timeout = minAgentTimeout;\n    }\n\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!inputOptions.idempotencyKey) inputOptions.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = inputOptions.idempotencyKey;\n    }\n\n    const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n\n    const req: RequestInit = {\n      method,\n      ...(body && { body: body as any }),\n      headers: reqHeaders,\n      ...(httpAgent && { agent: httpAgent }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null,\n    };\n\n    return { req, url, timeout: options.timeout };\n  }\n\n  private buildHeaders({\n    options,\n    headers,\n    contentLength,\n    retryCount,\n  }: {\n    options: FinalRequestOptions;\n    headers: Record<string, string | null | undefined>;\n    contentLength: string | null | undefined;\n    retryCount: number;\n  }): Record<string, string> {\n    const reqHeaders: Record<string, string> = {};\n    if (contentLength) {\n      reqHeaders['content-length'] = contentLength;\n    }\n\n    const defaultHeaders = this.defaultHeaders(options);\n    applyHeadersMut(reqHeaders, defaultHeaders);\n    applyHeadersMut(reqHeaders, headers);\n\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['content-type'];\n    }\n\n    // Don't set theses headers if they were already set or removed through default headers or by the caller.\n    // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n    // for the removal case.\n    if (\n      getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n      getHeader(headers, 'x-stainless-retry-count') === undefined\n    ) {\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\n    }\n    if (\n      getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n      getHeader(headers, 'x-stainless-timeout') === undefined &&\n      options.timeout\n    ) {\n      reqHeaders['x-stainless-timeout'] = String(Math.trunc(options.timeout / 1000));\n    }\n\n    this.validateHeaders(reqHeaders, headers);\n\n    return reqHeaders;\n  }\n\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  protected async prepareOptions(options: FinalRequestOptions): Promise<void> {}\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(\n    request: RequestInit,\n    { url, options }: { url: string; options: FinalRequestOptions },\n  ): Promise<void> {}\n\n  protected parseHeaders(headers: HeadersInit | null | undefined): Record<string, string> {\n    return (\n      !headers ? {}\n      : Symbol.iterator in headers ?\n        Object.fromEntries(Array.from(headers as Iterable<string[]>).map((header) => [...header]))\n      : { ...(headers as any as Record<string, string>) }\n    );\n  }\n\n  protected makeStatusError(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    return APIError.generate(status, error, message, headers);\n  }\n\n  request<Req, Rsp>(\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n\n  private async makeRequest<Req>(\n    optionsInput: PromiseOrValue<FinalRequestOptions<Req>>,\n    retriesRemaining: number | null,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n\n    await this.prepareOptions(options);\n\n    const { req, url, timeout } = await this.buildRequest(options, {\n      retryCount: maxRetries - retriesRemaining,\n    });\n\n    await this.prepareRequest(req, { url, options });\n\n    debug('request', url, options, req.headers);\n\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({ cause: response });\n    }\n\n    const responseHeaders = createResponseHeaders(response.headers);\n\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n        debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n\n      const errText = await response.text().catch((e) => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n      const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n\n      debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n\n    return { response, options, controller };\n  }\n\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null);\n    return new PagePromise<PageClass, Item>(this, request, Page);\n  }\n\n  buildURL<Req>(path: string, query: Req | null | undefined, defaultBaseURL?: string | undefined): string {\n    const baseURL = (!this.#baseURLOverridden && defaultBaseURL) || this.baseURL;\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(baseURL + (baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query } as Req;\n    }\n\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query as Record<string, unknown>);\n    }\n\n    return url.toString();\n  }\n\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return Object.entries(query)\n      .filter(([_, value]) => typeof value !== 'undefined')\n      .map(([key, value]) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        if (value === null) {\n          return `${encodeURIComponent(key)}=`;\n        }\n        throw new CerebrasError(\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\n        );\n      })\n      .join('&');\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    const fetchOptions = {\n      signal: controller.signal as any,\n      ...options,\n    };\n    if (fetchOptions.method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = fetchOptions.method.toUpperCase();\n    }\n\n    return (\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      this.fetch.call(undefined, url, fetchOptions).finally(() => {\n        clearTimeout(timeout);\n      })\n    );\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    let timeoutMillis: number | undefined;\n\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.['retry-after'];\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n\n    return this.makeRequest(options, retriesRemaining - 1);\n  }\n\n  private calculateDefaultRetryTimeoutMillis(retriesRemaining: number, maxRetries: number): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n\n    return sleepSeconds * jitter * 1000;\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\n\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: APIClient;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  /**\n   * @deprecated Use nextPageInfo instead\n   */\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\n  abstract nextPageInfo(): PageInfo | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n\n  async getNextPage(): Promise<this> {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new CerebrasError(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n    const nextOptions = { ...this.options };\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value as any);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages(): AsyncGenerator<this> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page: this = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: APIClient,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      request,\n      async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options),\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport const createResponseHeaders = (\n  headers: Awaited<ReturnType<Fetch>>['headers'],\n): Record<string, string> => {\n  return new Proxy(\n    Object.fromEntries(\n      // @ts-ignore\n      headers.entries(),\n    ),\n    {\n      get(target, name) {\n        const key = name.toString();\n        return target[key.toLowerCase()] || target[key];\n      },\n    },\n  );\n};\n\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\n\nexport type RequestClient = { fetch: Fetch };\nexport type Headers = Record<string, string | null | undefined>;\nexport type DefaultQuery = Record<string, string | undefined>;\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\n\nexport type RequestOptions<\n  Req = unknown | Record<string, unknown> | Readable | BlobLike | ArrayBufferView | ArrayBuffer,\n> = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: Req | undefined;\n  body?: Req | null | undefined;\n  headers?: Headers | undefined;\n  defaultBaseURL?: string | undefined;\n\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  httpAgent?: Agent;\n  signal?: AbortSignal | undefined | null;\n  idempotencyKey?: string;\n\n  __binaryRequest?: boolean | undefined;\n  __binaryResponse?: boolean | undefined;\n  __streamClass?: typeof Stream;\n};\n\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n  defaultBaseURL: true,\n\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n\n  __binaryRequest: true,\n  __binaryResponse: true,\n  __streamClass: true,\n};\n\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    !isEmptyObj(obj) &&\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\n  );\n};\n\nexport type FinalRequestOptions<Req = unknown | Record<string, unknown> | Readable | DataView> =\n  RequestOptions<Req> & {\n    method: HTTPMethod;\n    path: string;\n  };\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version':\n        typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nconst getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new CerebrasError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new CerebrasError(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) throw new CerebrasError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new CerebrasError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new CerebrasError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj: Object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders: Headers, newHeaders: Headers): void {\n  for (const k in newHeaders) {\n    if (!hasOwn(newHeaders, k)) continue;\n    const lowerKey = k.toLowerCase();\n    if (!lowerKey) continue;\n\n    const val = newHeaders[k];\n\n    if (val === null) {\n      delete targetHeaders[lowerKey];\n    } else if (val !== undefined) {\n      targetHeaders[lowerKey] = val;\n    }\n  }\n}\n\nexport function debug(action: string, ...args: any[]) {\n  if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n    console.log(`Cerebras:DEBUG:${action}`, ...args);\n  }\n}\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\nexport interface HeadersProtocol {\n  get: (header: string) => string | null | undefined;\n}\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\n\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\n  return typeof headers?.get === 'function';\n};\n\nexport const getRequiredHeader = (headers: HeadersLike | Headers, header: string): string => {\n  const foundHeader = getHeader(headers, header);\n  if (foundHeader === undefined) {\n    throw new Error(`Could not find ${header} header`);\n  }\n  return foundHeader;\n};\n\nexport const getHeader = (headers: HeadersLike | Headers, header: string): string | undefined => {\n  const lowerCasedHeader = header.toLowerCase();\n  if (isHeadersProtocol(headers)) {\n    // to deal with the case where the header looks like Stainless-Event-Id\n    const intercapsHeader =\n      header[0]?.toUpperCase() +\n      header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n      const value = headers.get(key);\n      if (value) {\n        return value;\n      }\n    }\n  }\n\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase() === lowerCasedHeader) {\n      if (Array.isArray(value)) {\n        if (value.length <= 1) return value[0];\n        console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n        return value[0];\n      }\n      return value;\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str: string | null | undefined): string => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n\n  throw new CerebrasError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n","var OverloadYield = require(\"./OverloadYield.js\");\nfunction _wrapAsyncGenerator(e) {\n  return function () {\n    return new AsyncGenerator(e.apply(this, arguments));\n  };\n}\nfunction AsyncGenerator(e) {\n  var r, t;\n  function resume(r, t) {\n    try {\n      var n = e[r](t),\n        o = n.value,\n        u = o instanceof OverloadYield;\n      Promise.resolve(u ? o.v : o).then(function (t) {\n        if (u) {\n          var i = \"return\" === r ? \"return\" : \"next\";\n          if (!o.k || t.done) return resume(i, t);\n          t = e[i](t).value;\n        }\n        settle(n.done ? \"return\" : \"normal\", t);\n      }, function (e) {\n        resume(\"throw\", e);\n      });\n    } catch (e) {\n      settle(\"throw\", e);\n    }\n  }\n  function settle(e, n) {\n    switch (e) {\n      case \"return\":\n        r.resolve({\n          value: n,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        r.reject(n);\n        break;\n      default:\n        r.resolve({\n          value: n,\n          done: !1\n        });\n    }\n    (r = r.next) ? resume(r.key, r.arg) : t = null;\n  }\n  this._invoke = function (e, n) {\n    return new Promise(function (o, u) {\n      var i = {\n        key: e,\n        arg: n,\n        resolve: o,\n        reject: u,\n        next: null\n      };\n      t ? t = t.next = i : (r = t = i, resume(e, n));\n    });\n  }, \"function\" != typeof e[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (e) {\n  return this._invoke(\"next\", e);\n}, AsyncGenerator.prototype[\"throw\"] = function (e) {\n  return this._invoke(\"throw\", e);\n}, AsyncGenerator.prototype[\"return\"] = function (e) {\n  return this._invoke(\"return\", e);\n};\nmodule.exports = _wrapAsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { ReadableStream, type Response } from './_shims/index';\nimport { APIError, CerebrasError } from './error';\n\ntype Bytes = string | ArrayBuffer | Uint8Array | Buffer | null | undefined;\n\nexport type ServerSentEvent = {\n  event: string | null;\n  data: string;\n  raw: string[];\n};\n\nexport class Stream<Item> implements AsyncIterable<Item> {\n  controller: AbortController;\n\n  constructor(\n    private iterator: () => AsyncIterator<Item>,\n    controller: AbortController,\n  ) {\n    this.controller = controller;\n  }\n\n  static fromSSEResponse<Item>(response: Response, controller: AbortController) {\n    let consumed = false;\n\n    async function* iterator(): AsyncIterator<Item, any, undefined> {\n      if (consumed) {\n        throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const sse of _iterSSEMessages(response, controller)) {\n          if (done) continue;\n\n          if (sse.data.startsWith('[DONE]')) {\n            done = true;\n            continue;\n          }\n\n          if (sse.event === null) {\n            let data;\n\n            try {\n              data = JSON.parse(sse.data);\n            } catch (e) {\n              console.error(`Could not parse message into JSON:`, sse.data);\n              console.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n\n            if (data && data.error) {\n              // Status code of zero is generic error message.\n              const status = data.status_code || 0;\n              throw APIError.generate(status, data.error, undefined, undefined);\n            }\n\n            yield data;\n          } else {\n            let data;\n            try {\n              data = JSON.parse(sse.data);\n            } catch (e) {\n              console.error(`Could not parse message into JSON:`, sse.data);\n              console.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n            // TODO: Is this where the error should be thrown?\n            if (sse.event == 'error') {\n              // Status code of zero is generic error message.\n              const status = data.status_code || 0;\n              throw APIError.generate(status, data.error, undefined, undefined);\n            }\n            yield { event: sse.event, data: data } as any;\n          }\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (e instanceof Error && e.name === 'AbortError') return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n\n    return new Stream(iterator, controller);\n  }\n\n  /**\n   * Generates a Stream from a newline-separated ReadableStream\n   * where each item is a JSON value.\n   */\n  static fromReadableStream<Item>(readableStream: ReadableStream, controller: AbortController) {\n    let consumed = false;\n\n    async function* iterLines(): AsyncGenerator<string, void, unknown> {\n      const lineDecoder = new LineDecoder();\n\n      const iter = readableStreamAsyncIterable<Bytes>(readableStream);\n      for await (const chunk of iter) {\n        for (const line of lineDecoder.decode(chunk)) {\n          yield line;\n        }\n      }\n\n      for (const line of lineDecoder.flush()) {\n        yield line;\n      }\n    }\n\n    async function* iterator(): AsyncIterator<Item, any, undefined> {\n      if (consumed) {\n        throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const line of iterLines()) {\n          if (done) continue;\n          if (line) yield JSON.parse(line);\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (e instanceof Error && e.name === 'AbortError') return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n\n    return new Stream(iterator, controller);\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<Item> {\n    return this.iterator();\n  }\n\n  /**\n   * Splits the stream into two streams which can be\n   * independently read from at different speeds.\n   */\n  tee(): [Stream<Item>, Stream<Item>] {\n    const left: Array<Promise<IteratorResult<Item>>> = [];\n    const right: Array<Promise<IteratorResult<Item>>> = [];\n    const iterator = this.iterator();\n\n    const teeIterator = (queue: Array<Promise<IteratorResult<Item>>>): AsyncIterator<Item> => {\n      return {\n        next: () => {\n          if (queue.length === 0) {\n            const result = iterator.next();\n            left.push(result);\n            right.push(result);\n          }\n          return queue.shift()!;\n        },\n      };\n    };\n\n    return [\n      new Stream(() => teeIterator(left), this.controller),\n      new Stream(() => teeIterator(right), this.controller),\n    ];\n  }\n\n  /**\n   * Converts this stream to a newline-separated ReadableStream of\n   * JSON stringified values in the stream\n   * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n   */\n  toReadableStream(): ReadableStream {\n    const self = this;\n    let iter: AsyncIterator<Item>;\n    const encoder = new TextEncoder();\n\n    return new ReadableStream({\n      async start() {\n        iter = self[Symbol.asyncIterator]();\n      },\n      async pull(ctrl: any) {\n        try {\n          const { value, done } = await iter.next();\n          if (done) return ctrl.close();\n\n          const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n\n          ctrl.enqueue(bytes);\n        } catch (err) {\n          ctrl.error(err);\n        }\n      },\n      async cancel() {\n        await iter.return?.();\n      },\n    });\n  }\n}\n\nexport async function* _iterSSEMessages(\n  response: Response,\n  controller: AbortController,\n): AsyncGenerator<ServerSentEvent, void, unknown> {\n  if (!response.body) {\n    controller.abort();\n    throw new CerebrasError(`Attempted to iterate over a response with no body`);\n  }\n\n  const sseDecoder = new SSEDecoder();\n  const lineDecoder = new LineDecoder();\n\n  const iter = readableStreamAsyncIterable<Bytes>(response.body);\n  for await (const sseChunk of iterSSEChunks(iter)) {\n    for (const line of lineDecoder.decode(sseChunk)) {\n      const sse = sseDecoder.decode(line);\n      if (sse) yield sse;\n    }\n  }\n\n  for (const line of lineDecoder.flush()) {\n    const sse = sseDecoder.decode(line);\n    if (sse) yield sse;\n  }\n}\n\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator: AsyncIterableIterator<Bytes>): AsyncGenerator<Uint8Array> {\n  let data = new Uint8Array();\n\n  for await (const chunk of iterator) {\n    if (chunk == null) {\n      continue;\n    }\n\n    const binaryChunk =\n      chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n      : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n      : chunk;\n\n    let newData = new Uint8Array(data.length + binaryChunk.length);\n    newData.set(data);\n    newData.set(binaryChunk, data.length);\n    data = newData;\n\n    let patternIndex;\n    while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n      yield data.slice(0, patternIndex);\n      data = data.slice(patternIndex);\n    }\n  }\n\n  if (data.length > 0) {\n    yield data;\n  }\n}\n\nfunction findDoubleNewlineIndex(buffer: Uint8Array): number {\n  // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n  // and returns the index right after the first occurrence of any pattern,\n  // or -1 if none of the patterns are found.\n  const newline = 0x0a; // \\n\n  const carriage = 0x0d; // \\r\n\n  for (let i = 0; i < buffer.length - 2; i++) {\n    if (buffer[i] === newline && buffer[i + 1] === newline) {\n      // \\n\\n\n      return i + 2;\n    }\n    if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n      // \\r\\r\n      return i + 2;\n    }\n    if (\n      buffer[i] === carriage &&\n      buffer[i + 1] === newline &&\n      i + 3 < buffer.length &&\n      buffer[i + 2] === carriage &&\n      buffer[i + 3] === newline\n    ) {\n      // \\r\\n\\r\\n\n      return i + 4;\n    }\n  }\n\n  return -1;\n}\n\nclass SSEDecoder {\n  private data: string[];\n  private event: string | null;\n  private chunks: string[];\n\n  constructor() {\n    this.event = null;\n    this.data = [];\n    this.chunks = [];\n  }\n\n  decode(line: string) {\n    if (line.endsWith('\\r')) {\n      line = line.substring(0, line.length - 1);\n    }\n\n    if (!line) {\n      // empty line and we didn't previously encounter any messages\n      if (!this.event && !this.data.length) return null;\n\n      const sse: ServerSentEvent = {\n        event: this.event,\n        data: this.data.join('\\n'),\n        raw: this.chunks,\n      };\n\n      this.event = null;\n      this.data = [];\n      this.chunks = [];\n\n      return sse;\n    }\n\n    this.chunks.push(line);\n\n    if (line.startsWith(':')) {\n      return null;\n    }\n\n    let [fieldname, _, value] = partition(line, ':');\n\n    if (value.startsWith(' ')) {\n      value = value.substring(1);\n    }\n\n    if (fieldname === 'event') {\n      this.event = value;\n    } else if (fieldname === 'data') {\n      this.data.push(value);\n    }\n\n    return null;\n  }\n}\n\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nclass LineDecoder {\n  // prettier-ignore\n  static NEWLINE_CHARS = new Set(['\\n', '\\r']);\n  static NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n\n  buffer: string[];\n  trailingCR: boolean;\n  textDecoder: any; // TextDecoder found in browsers; not typed to avoid pulling in either \"dom\" or \"node\" types.\n\n  constructor() {\n    this.buffer = [];\n    this.trailingCR = false;\n  }\n\n  decode(chunk: Bytes): string[] {\n    let text = this.decodeText(chunk);\n\n    if (this.trailingCR) {\n      text = '\\r' + text;\n      this.trailingCR = false;\n    }\n    if (text.endsWith('\\r')) {\n      this.trailingCR = true;\n      text = text.slice(0, -1);\n    }\n\n    if (!text) {\n      return [];\n    }\n\n    const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n    let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n\n    // if there is a trailing new line then the last entry will be an empty\n    // string which we don't care about\n    if (trailingNewline) {\n      lines.pop();\n    }\n\n    if (lines.length === 1 && !trailingNewline) {\n      this.buffer.push(lines[0]!);\n      return [];\n    }\n\n    if (this.buffer.length > 0) {\n      lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n      this.buffer = [];\n    }\n\n    if (!trailingNewline) {\n      this.buffer = [lines.pop() || ''];\n    }\n\n    return lines;\n  }\n\n  decodeText(bytes: Bytes): string {\n    if (bytes == null) return '';\n    if (typeof bytes === 'string') return bytes;\n\n    // Node:\n    if (typeof Buffer !== 'undefined') {\n      if (bytes instanceof Buffer) {\n        return bytes.toString();\n      }\n      if (bytes instanceof Uint8Array) {\n        return Buffer.from(bytes).toString();\n      }\n\n      throw new CerebrasError(\n        `Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`,\n      );\n    }\n\n    // Browser\n    if (typeof TextDecoder !== 'undefined') {\n      if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n        this.textDecoder ??= new TextDecoder('utf8');\n        return this.textDecoder.decode(bytes);\n      }\n\n      throw new CerebrasError(\n        `Unexpected: received non-Uint8Array/ArrayBuffer (${\n          (bytes as any).constructor.name\n        }) in a web platform. Please report this error.`,\n      );\n    }\n\n    throw new CerebrasError(\n      `Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`,\n    );\n  }\n\n  flush(): string[] {\n    if (!this.buffer.length && !this.trailingCR) {\n      return [];\n    }\n\n    const lines = [this.buffer.join('')];\n    this.buffer = [];\n    this.trailingCR = false;\n    return lines;\n  }\n}\n\n/** This is an internal helper function that's just used for testing */\nexport function _decodeChunks(chunks: string[]): string[] {\n  const decoder = new LineDecoder();\n  const lines: string[] = [];\n  for (const chunk of chunks) {\n    lines.push(...decoder.decode(chunk));\n  }\n\n  return lines;\n}\n\nfunction partition(str: string, delimiter: string): [string, string, string] {\n  const index = str.indexOf(delimiter);\n  if (index !== -1) {\n    return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n  }\n\n  return [str, '', ''];\n}\n\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function readableStreamAsyncIterable<T>(stream: any): AsyncIterableIterator<T> {\n  if (stream[Symbol.asyncIterator]) return stream;\n\n  const reader = stream.getReader();\n  return {\n    async next() {\n      try {\n        const result = await reader.read();\n        if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\n        return result;\n      } catch (e) {\n        reader.releaseLock(); // release lock when stream becomes errored\n        throw e;\n      }\n    },\n    async return() {\n      const cancelPromise = reader.cancel();\n      reader.releaseLock();\n      await cancelPromise;\n      return { done: true, value: undefined };\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n"],"names":["_objectSpread","require","resource_1","core_1","Models","APIResource","retrieve","modelId","params","arguments","length","undefined","options","isRequestOptions","this","cfRay","xAmzCfId","_client","get","concat","headers","list","exports","_typeof","module","t","r","e","Symbol","toPrimitive","i","call","TypeError","String","Number","__esModule","d","v","k","__exportStar","kind","fetch","Request","Response","Headers","FormData","Blob","File","ReadableStream","getMultipartRequestOptions","getDefaultAgent","fileFromPath","isFsReadStream","auto","setShims","shims","Error","OverloadYield","completions_1","Object","enumerable","Completions","models_1","CerebrasError","APIError","constructor","status","error","message","super","makeMessage","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","_ref","_asyncIterator","n","o","asyncIterator","iterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","Promise","reject","done","resolve","value","then","s","next","prototype","apply","CompletionsAPI","__importStar","Chat","completions","chat_1","MultipartBody","body","toStringTag","_objectWithoutProperties","_excluded","Core","Errors","Uploads","API","Cerebras","APIClient","_options$timeout","baseURL","readEnv","apiKey","warmTCPConnection","opts","baseURLOverridden","timeout","httpAgent","maxRetries","chat","models","_options","debug","defaultQuery","defaultHeaders","authHeaders","Authorization","_a","DEFAULT_TIMEOUT","APIConnectionTimeoutError","APIUserAbortError","toFile","uploads_1","error_1","create","_body$stream","xDelayTime","post","stream","toString","toPropertyKey","defineProperty","configurable","writable","init","getRuntime","property","keys","MultipartBody_1","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","async","form","url","client","objectWithoutPropertiesLoose","getOwnPropertySymbols","indexOf","propertyIsEnumerable","hasOwnProperty","ownKeys","filter","getOwnPropertyDescriptor","push","forEach","getOwnPropertyDescriptors","defineProperties","index_1","index_2","blob","name","lastModified","isBlobLike","size","type","text","slice","arrayBuffer","_getName","isFileLike","isResponseLike","_URL$pathname$split$p","URL","pathname","split","pop","data","bits","parts","ArrayBuffer","isView","_value$constructor","isAsyncIterableIterator","props","getOwnPropertyNames","map","p","join","propsForError","_iteratorError","_iteratorAbruptCompletion","_didIteratorError","_step","_iterator","chunk","err","return","getBytes","_getStringFromMaybeBu","getStringFromMaybeBuffer","filename","path","getName","_bits$","x","Buffer","hasUploadableValue","createForm","all","entries","key","addFormValue","isUploadable","Array","isArray","some","append","file","entry","_ref2","prop","version_1","streaming_1","uploads_2","defaultParseResponse","_contentType$split$","response","__streamClass","fromSSEResponse","controller","Stream","__binaryResponse","contentType","mediaType","trim","includes","endsWith","json","maybeMultipartFormRequestOptions","multipartFormRequestOptions","APIPromise","responsePromise","parseResponse","_thenUnwrap","transform","asResponse","withResponse","parse","parsedPromise","onfulfilled","onrejected","catch","finally","onfinally","overriddenFetch","_APIClient_baseURLOverridden","set","__classPrivateFieldSet","validatePositiveInteger","Accept","method","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","methodRequest","patch","put","delete","request","DataView","buffer","getAPIList","Page","requestAPIList","calculateContentLength","byteLength","TextEncoder","encode","buildRequest","inputOptions","_options$httpAgent","_httpAgent$options","_httpAgent$options$ti","_options$signal","retryCount","query","defaultBaseURL","__binaryRequest","isMultipartBody","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","reqHeaders","buildHeaders","req","agent","signal","_ref3","applyHeadersMut","getHeader","Math","trunc","prepareOptions","prepareRequest","_ref4","parseHeaders","fromEntries","from","header","makeStatusError","remainingRetries","makeRequest","optionsInput","retriesRemaining","_options$maxRetries","_options$signal2","aborted","AbortController","fetchWithTimeout","_options$signal3","retryRequest","responseHeaders","createResponseHeaders","ok","shouldRetry","retryMessage","errText","errJSON","safeJSON","errMessage","PagePromise","__classPrivateFieldGet","isAbsoluteURL","startsWith","isEmptyObj","search","stringifyQuery","_ref5","_","_ref6","encodeURIComponent","ms","_ref7","addEventListener","abort","setTimeout","fetchOptions","toUpperCase","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","isNaN","retryAfterHeader","timeoutSeconds","Date","now","_options$maxRetries2","calculateDefaultRetryTimeoutMillis","sleep","numRetries","min","pow","random","VERSION","AbstractPage","_AbstractPage_client","hasNextPage","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","searchParams","iterPages","_this","_wrapAsyncGenerator","page","_awaitAsyncGenerator","WeakMap","_this2","item","_this3","_iteratorError2","_iteratorAbruptCompletion2","_didIteratorError2","_step2","_iterator2","Proxy","target","toLowerCase","requestOptionsKeys","obj","every","hasOwn","getPlatformProperties","_Deno$version$deno","_Deno$version","Deno","build","normalizePlatform","os","normalizeArch","arch","version","deno","EdgeRuntime","process","platform","browserInfo","navigator","browserPatterns","pattern","match","exec","userAgent","major","minor","browser","getBrowserInfo","_platformHeaders","startsWithSchemeRegexp","test","isInteger","_unused","env","_process$env$env$trim","_process$env","_Deno$env","_Deno$env$get","round","parseInt","Boolean","coerceInteger","coerceFloat","_k","targetHeaders","newHeaders","lowerKey","val","action","_process","_len","args","_key","console","log","coerceBoolean","replace","c","isRunningInBrowser","window","document","getRequiredHeader","foundHeader","lowerCasedHeader","isHeadersProtocol","_header$","intercapsHeader","substring","_m","g1","g2","warn","str","btoa","AsyncGenerator","resume","u","settle","arg","_invoke","consumed","_iterSSEMessages","sse","event","raw","status_code","fromReadableStream","readableStream","_iterLines","lineDecoder","LineDecoder","iter","readableStreamAsyncIterable","_iterator3","line","decode","flush","_iterator5","_iteratorError3","_iteratorAbruptCompletion3","_didIteratorError3","_step3","_iterator4","iterLines","tee","left","right","teeIterator","queue","result","shift","toReadableStream","self","encoder","start","pull","ctrl","close","bytes","enqueue","cancel","_iter$return","_iter","_x","_x2","_iterSSEMessages2","sseDecoder","SSEDecoder","_iteratorError4","_iteratorAbruptCompletion4","_didIteratorError4","_step4","_iterator6","_x3","_iterSSEChunks","iterSSEChunks","sseChunk","Uint8Array","_iteratorError5","_iteratorAbruptCompletion5","_didIteratorError5","_step5","_iterator7","binaryChunk","patternIndex","newData","findDoubleNewlineIndex","chunks","fieldname","delimiter","index","partition","trailingCR","decodeText","trailingNewline","NEWLINE_CHARS","has","lines","NEWLINE_REGEXP","TextDecoder","_this$textDecoder","textDecoder","reader","getReader","read","releaseLock","cancelPromise","Set","decoder"],"sourceRoot":""}